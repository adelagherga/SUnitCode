How To Run:
    1. Import SUnitCode Directory
    2. In parent directory of SUnitCode, enter 
            $ ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
       This determines the path to the parent directory containing SUnitCode
    3. Determine path to magma and set path to $MAGMA by entering
            $ MAGMA="path-to-magma"
            i. For Thumper, this is
                $ MAGMA="/Applications/Magma_2.21-1/magma"
            ii. For r7-bennett3:
                $ MAGMA="magma"
    4. Change current working directory to SUnitCode by entering 
            $ cd $ABSOLUTE_PATH/SUnitCode

    To Generate Sets S_i:= [p_1, ..., p_n], where (p_1)*...*(p_n) <= m for a user-input m:
        i. In a terminal window, enter 
                $ source $ABSOLUTE_PATH/SUnitCode/GenerateSCode/BashGenerateSetsCode/GenerateSets.sh
        ii. For desired m, in a terminal window, enter 
                $ GenerateSetsXYZ2 m $ABSOLUTE_PATH/SUnitOutput    
            This code generates the directory $ABSOLUTE_PATH/SUnitOutput and outputs the sets S_i in a text file labeled $ABSOLUTE_PATH/SUnitOutput/nSets.out
    
    To Run SUnit Code in Parallel on Multiple Cores:
        i. To compute the number of lines of nSets.out (ie. the number of sets, S), in a terminal window, enter
                $ N=$(awk 'END{print NR}' $ABSOLUTE_PATH/SUnitOutput/nSets.out)
        ii. Determine path to GNU-parallel and set path to $GNU by entering
                $ GNU="path-to-GNU-parallel"
                i. For Thumper, this is
                    GNU="/Users/Adela/bin/parallel"
                ii. For r7-bennett3:
                    GNU="/home/ghergaa/parallel-20170722/src/parallel"
        iii. In a terminal window, enter
                $ chmod u+x $ABSOLUTE_PATH/SUnitCode/XYZ2Code/BashXYZ2Code/RunParallelSUnitXYZ2.sh
                $ nohup seq 1 $N | $GNU --memfree 1G --resume --joblog 1000000JobLog $ABSOLUTE_PATH/SUnitCode/XYZ2Code/BashXYZ2Code/RunParallelSUnitXYZ2.sh $ABSOLUTE_PATH {} $MAGMA &
             This code runs SUnitXYZ2.m on each of the sets S_i:= [p_1, ..., p_n] of $ABSOLUTE_PATH/SUnitCode/nSets.out and outputs the results [X,Y,Z] into individual text files labeled $ABSOLUTE_PATH/SUnitOutput/S_i.out
        iv. In a terminal window, enter
                $ rm -r $ABSOLUTE_PATH/Requested  
            This removes unnecessary empty files created by GNU parallel
    
    To Run SUnit Code Sequentially on 1 Core:
        i. In a terminal window, enter
                $ chmod u+x $ABSOLUTE_PATH/SUnitCode/XYZ2Code/BashXYZ2Code/RunSUnitXYZ2.sh
                $ nohup $ABSOLUTE_PATH/SUnitCode/XYZ2Code/BashXYZ2Code/RunSUnitXYZ2.sh $ABSOLUTE_PATH &
           This code runs SUnitXYZ2.m on each of the sets S_i:= [p_1, ..., p_n] of $ABSOLUTE_PATH/SUnitCode/nSets.out and outputs the results [X,Y,Z] into individual text files labeled $ABSOLUTE_PATH/SUnitOutput/S_i.out

    5. To amalgamate solutions: 
        i. In a terminal window, enter 
            $ source $ABSOLUTE_PATH/SUnitCode/PostProcessing/BashAmalgamateSolutions/GatherSUnitXYZ2.sh
        This code amalgamates all solutions corresponding to the same set S_i, there S_i:= [p_1, ..., p_n] as output by SUnitXYZ2.m in $ABSOLUTE_PATH/SUnitOutput and prints them out in S=[p_1,...,p_n] 
        in $ABSOLUTE_PATH/SUnitOutput
    
        ii. In a terminal window, enter 
	    $ FILENAME=[S]
            $ sed 's/\,$//'  $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME > temp.txt ; mv temp.txt $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME
        This code removes all the characters "," at the end of each line of the file S=[FILENAME], where it exists
            $ sed 's/$/\,/'  $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME > temp.txt ; mv temp.txt $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME
        This code adds the character "," at the end of each line of the file S=[FILENAME]; ensures that each line is separated by "," for processing in Magma
	    $ sort -g -k 2 $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME | uniq > temp.txt ; mv temp.txt $ABSOLUTE_PATH/SUnitOutput/S=$FILENAME
	This code sorts the solutions in the file S=[FILENAME] and removes duplicate solutions
            $ uniq /Users/adela016/Desktop/PAPER_SOLUTIONS/S=[2,3,23]Curves.txt > temp.txt ; mv temp.txt /Users/adela016/Desktop/PAPER_SOLUTIONS/S=[2,3,23]Curves.txt
	This code (run on local host) removes duplicates from the resulting elliptic curves of the file S=[FILENAME]Curves.txt